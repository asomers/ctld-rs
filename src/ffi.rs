#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(unused)]
/* automatically generated by rust-bindgen 0.69.4 */

pub const CTL_DEFAULT_DEV: &[u8; 13] = b"/dev/cam/ctl\0";
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum ctl_lun_list_status {
    CTL_LUN_LIST_NONE = 0,
    CTL_LUN_LIST_OK = 1,
    CTL_LUN_LIST_NEED_MORE_SPACE = 2,
    CTL_LUN_LIST_ERROR = 3,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ctl_lun_list {
    pub backend: [::std::os::raw::c_char; 32usize],
    pub alloc_len: u32,
    pub lun_xml: *mut ::std::os::raw::c_char,
    pub fill_len: u32,
    pub status: ctl_lun_list_status,
    pub error_str: [::std::os::raw::c_char; 160usize],
}
#[test]
fn bindgen_test_layout_ctl_lun_list() {
    const UNINIT: ::std::mem::MaybeUninit<ctl_lun_list> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<ctl_lun_list>(),
        216usize,
        concat!("Size of: ", stringify!(ctl_lun_list))
    );
    assert_eq!(
        ::std::mem::align_of::<ctl_lun_list>(),
        8usize,
        concat!("Alignment of ", stringify!(ctl_lun_list))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).backend) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ctl_lun_list),
            "::",
            stringify!(backend)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).alloc_len) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(ctl_lun_list),
            "::",
            stringify!(alloc_len)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).lun_xml) as usize - ptr as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(ctl_lun_list),
            "::",
            stringify!(lun_xml)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).fill_len) as usize - ptr as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(ctl_lun_list),
            "::",
            stringify!(fill_len)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).status) as usize - ptr as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(ctl_lun_list),
            "::",
            stringify!(status)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).error_str) as usize - ptr as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(ctl_lun_list),
            "::",
            stringify!(error_str)
        )
    );
}
